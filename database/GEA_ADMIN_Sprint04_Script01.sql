DROP PROCEDURE IF EXISTS GEA_WEB.CONSOLIDACION_DIARIA;
/*
Autor: Marcos Chavarria Fallas
Fecha: 30/05/2019
Revisa las fechas desde el inicio de lectura o desde la última consolidacion generada, y se generan las consolidaciones por día, sin procesar.
*/
DELIMITER //
CREATE PROCEDURE GEA_WEB.CONSOLIDACION_DIARIA()
BEGIN
    /*CONSTANTES*/
    DECLARE C_LECTURA_NO_PROCESADA INTEGER(1) DEFAULT 0;
    DECLARE C_LECTURA_EN_PROCESO INTEGER(1) DEFAULT 1;
    DECLARE C_LECTURA_PROCESADA INTEGER(1) DEFAULT 2;

    /*VARIABLES*/
    DECLARE V_MEDIDOR_ID INTEGER(10);
    DECLARE P_MEDIDOR_ID INTEGER(10);
    DECLARE V_FECHA_CONSOLIDACION DATE;
    
	DECLARE V_MAX_LECTURA FLOAT(18,8);
    DECLARE V_CONSUMO FLOAT(18,8);
    DECLARE V_DIA_NUMERO INTEGER(6);
    DECLARE V_CANTIDAD_LECTURA INTEGER(6);

	DECLARE V_MAX_LECTURA_REF FLOAT(18,8);
    DECLARE V_CONSUMO_REF FLOAT(18,8);
    DECLARE V_CANTIDAD_LECTURA_REF INTEGER(6);
    DECLARE V_NO_DATA TINYINT(1) DEFAULT 0;

	/*CRUSORES*/
    DECLARE CR_MEDIDOR_CON_LECTURA 
		CURSOR FOR SELECT DISTINCT MEDIDOR_ID FROM LECTURA  WHERE PROCESADA = C_LECTURA_EN_PROCESO; 
            
	DECLARE CR_LECTURA_CONSOLIDADA
		CURSOR FOR SELECT DIA_NUMERO, MAX_LECTURA, CONSUMO, CANTIDAD_LECTURA FROM V_LECTURA_DIARIA_PARA_INSERTAR
        WHERE MEDIDOR_ID = P_MEDIDOR_ID AND DIA_NUMERO <= DATE_FORMAT(V_FECHA_CONSOLIDACION, '%Y%m%d');

    /*Definicion de Handlers*/
    DECLARE CONTINUE HANDLER FOR NOT FOUND 
        BEGIN 
		SELECT 'NO DATA FOUND';
        SET V_NO_DATA = 1;
	END;
    
    DECLARE EXIT HANDLER FOR SQLEXCEPTION 
    BEGIN
		SELECT 'ERROR EN EL PROCESO';        
        ROLLBACK; 
        #TODO REGISTRAR ERROR EN PROCESO
    END;
    
    SELECT "INICIO SP";
    SET SQL_SAFE_UPDATES=0;
    START TRANSACTION;
	
    SELECT DATE_ADD(DATE(SYSDATE()), INTERVAL -6 WEEK) INTO V_FECHA_CONSOLIDACION;
    -- Marca todas las lecturas con más de 2 meses como en proceso
    UPDATE LECTURA SET PROCESADA = C_LECTURA_EN_PROCESO WHERE PROCESADA = C_LECTURA_NO_PROCESADA AND FECHA_LECTURA <= V_FECHA_CONSOLIDACION;
    -- UPDATE LECTURA SET PROCESADA = 1 WHERE PROCESADA = 0 AND FECHA_LECTURA <= DATE_ADD(DATE(SYSDATE()), INTERVAL -6 WEEK);
    
    -- HACE LECTURA DE TODOS LOS MEDIDORES CON LECTURAS MARCADA EN PROCESO
    
	OPEN CR_MEDIDOR_CON_LECTURA;
	CUROSOR_LOOP_MCL: LOOP
		SELECT '5';
		FETCH CR_MEDIDOR_CON_LECTURA INTO V_MEDIDOR_ID;
		IF V_NO_DATA = 1 THEN
			LEAVE CUROSOR_LOOP_MCL;
		END IF;
		SELECT '6';
		-- REVISA LOS DATOS A CONSOLIDAR POR MEDIDOR
        SET P_MEDIDOR_ID = V_MEDIDOR_ID;
		OPEN CR_LECTURA_CONSOLIDADA;
		CUROSOR_LOOP_LC: LOOP
			SELECT '7';
			FETCH CR_LECTURA_CONSOLIDADA INTO V_DIA_NUMERO, V_MAX_LECTURA, V_CONSUMO, V_CANTIDAD_LECTURA ;
			IF V_NO_DATA = 1 THEN
				LEAVE CUROSOR_LOOP_LC;
			END IF;
			SELECT '8';
			BEGIN
				DECLARE CONTINUE HANDLER FOR NOT FOUND 
					BEGIN 
					SET V_NO_DATA = 1;
				END;
                SET V_NO_DATA = 0;
                SELECT MAX_LECTURA, CONSUMO, CANTIDAD_LECTURA INTO V_MAX_LECTURA_REF, V_CONSUMO_REF, V_CANTIDAD_LECTURA_REF FROM LECTURA_DIARIA WHERE MEDIDOR_ID = V_MEDIDOR_ID AND DIA_NUMERO = V_DIA_NUMERO;
                IF (V_NO_DATA = 1) THEN
                	--  INSERTA EL REGISTRO
                    INSERT INTO LECTURA_DIARIA (MEDIDOR_ID, MAX_LECTURA, CONSUMO, DIA_NUMERO, CANTIDAD_LECTURA) VALUES (V_MEDIDOR_ID, V_MAX_LECTURA, V_CONSUMO, V_DIA_NUMERO);
					-- REGISTAR ERROR SI LECTURA DIARIA YA EXISTE
                END IF;
            END;        
		END LOOP CUROSOR_LOOP_LC;
		CLOSE CR_LECTURA_CONSOLIDADA;
	END LOOP CUROSOR_LOOP_MCL;
	CLOSE CR_MEDIDOR_CON_LECTURA;        
    
    UPDATE GEA_WEB.LECTURA SET PROCESADA = C_LECTURA_PROCESADA WHERE PROCESADA = C_LECTURA_EN_PROCESO;
    
    SELECT "FIN SP";
    COMMIT;
END //
DELIMITER ;	 